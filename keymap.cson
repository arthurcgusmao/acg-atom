# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#_customizing_keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

'.platform-win32 atom-text-editor, .platform-linux atom-text-editor':
    # ctrl-g for find-and-replace
    'ctrl-g': 'find-and-replace:find-next'
    'ctrl-shift-g': 'find-and-replace:find-previous'

'.platform-linux, .platform-linux .command-palette atom-text-editor':
    # disable the default command-palette command
    'ctrl-shift-P': 'unset!'

'.platform-win32, .platform-linux':
    # unset ctrl-shift-g to use in find-and-replace
    'ctrl-shift-g': 'unset!'
    # disables alt-<key> from toggling the menu bar so now we can bind these keystrokes
    'alt': 'abort!'
    'alt-f1': 'window:toggle-menu-bar'

'.platform-linux':
    # use only ctrl-o for the fuzzy file finder
    'ctrl-t': 'unset!'
    'ctrl-p': 'unset!'
    'ctrl-o': 'fuzzy-finder:toggle-file-finder'
    # change project-manager keybindings
    'alt-shift-P': 'unset!'
    'alt-o': 'project-manager:list-projects'
    # alt-x for command-palette
    'alt-x': 'command-palette:toggle'
    # change go to line in file from ctrl-g to ctrl-l
    'ctrl-g': 'unset!'
    'ctrl-l': 'go-to-line:toggle'

'body':
    # switching tabs: alt-q does switching and ctrl-tab does traditional behavior
    'alt-q': 'pane:show-next-recently-used-item'
    'alt-shift-q': 'pane:show-previous-recently-used-item'
    'alt-q ^alt': 'pane:move-active-item-to-top-of-stack'
    'alt-shift-q ^alt': 'pane:move-active-item-to-top-of-stack'
    'ctrl-tab': 'pane:show-next-item'
    'ctrl-shift-tab': 'pane:show-previous-item'
    'ctrl-tab ^ctrl': 'unset!'
    'ctrl-shift-tab ^ctrl': 'unset!'
    # developer tools
    'ctrl-shift-i': 'unset!'
    'f12': 'window:toggle-dev-tools'
    # move selection left/right
    'alt-shift-left': 'unset!'
    'alt-shift-right': 'unset!'
    'ctrl-alt-left': 'editor:move-selection-left'
    'ctrl-alt-right': 'editor:move-selection-right'
    # disable buttons that may quit without intention
    'ctrl-q': 'unset!'
    'ctrl-shift-w': 'unset!'
    # opening files and projects
    'ctrl-o': 'unset!'
    'ctrl-shift-o': 'application:open-file'
    'alt-shift-o': 'application:open-folder'

'atom-text-editor':
    # expand region
    'shift-space': 'expand-region:expand'
    'shift-alt-space': 'expand-region:shrink'
    # deleting text and backspacing
    'ctrl-shift-delete': 'editor:delete-to-end-of-line'
    'ctrl-shift-backspace': 'editor:delete-to-beginning-of-line'
    # clear line
    'shift-backspace': 'custom:clear-line'

'atom-text-editor:not([mini])':
    # deselect selected text
    'escape': 'custom:deselect-text'
    # join line above
    'ctrl-shift-j': 'custom:join-line-above'
    # unbind default move line up/down
    # 'ctrl-up': 'unset!'
    # 'ctrl-down': 'unset!'
    # setup moving up/down between paragraphs
    'ctrl-up': 'editor:move-to-beginning-of-previous-paragraph'
    'ctrl-down': 'editor:move-to-beginning-of-next-paragraph'
    'shift-ctrl-up': 'editor:select-to-beginning-of-previous-paragraph'
    'shift-ctrl-down': 'editor:select-to-beginning-of-next-paragraph'
    # clipboard-plus keybinding
    'alt-v': 'clipboard-plus:toggle'

'atom-workspace':
    'ctrl-alt-p': 'unset!'
    'f6': 'preview-inline:show'

'atom-workspace atom-text-editor':
    # selection-mode (ctrl-space just like in emacs)
    'ctrl-space': 'selection-mode:toggle-without-deselecting'
    # unset select line
    'ctrl-l': 'unset!'
'atom-workspace atom-text-editor.editor.selection-mode':
    # selection-mode (ctrl-space just like in emacs)
    'escape': 'selection-mode:cancel'

'atom-workspace, atom-workspace atom-text-editor':
    'f7': 'markdown-preview-plus:toggle'

'atom-workspace atom-text-editor:not([mini])':
    # move line up/down
    'ctrl-alt-up': 'editor:move-line-up'
    'ctrl-alt-down': 'editor:move-line-down'
    # fold selected text
    'ctrl-alt-f': 'editor:fold-selection'

# 'atom-text-editor:not(mini).autocomplete-active':
    # # Disable Enter key for confirming an autocomplete suggestion
    # 'enter': 'editor:newline'


# latex specifics
'atom-text-editor[data-grammar~="latex"]':
    'ctrl-alt-b': 'unset!'
    'ctrl-alt-s': 'unset!'
    'ctrl-alt-c': 'unset!'
    'f9': 'latex:build'
